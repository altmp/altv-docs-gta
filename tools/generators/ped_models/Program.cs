using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using Newtonsoft.Json;
using PedModelsPageCreator;

namespace PedPageCreator
{
    class Program
    {
        static void Main(string[] args)
        {
            var depsFolder = "../../deps/gta-v-data-dumps/";
            var pedsJson = depsFolder + "peds.json";

            var pedModelsFile = "../../../articles/ped/models.md";
            var imagePath = "~/altv-docs-assets/altv-docs-gta/images/ped/models/";

            /*
             * Read JSON files from gta-v-data-dumps by DurtyFree
             */

            if (!File.Exists(pedsJson))
            {
                Console.WriteLine("Couldn't find " + pedsJson + ". Are you running the project with 'dotnet run .\\generators-ped_models.csproj'?");
                Environment.Exit(1);
            }

            using var readerPeds = new StreamReader(pedsJson);
            var jsonPeds = readerPeds.ReadToEnd();
            var peds = JsonConvert.DeserializeObject<List<Ped>>(jsonPeds);

            var sortedPedsByName = peds.OrderBy(x => x.Name);

            /*
             * Generate Images
             */
            var gallery = File.CreateText(pedModelsFile);

            gallery.WriteLine("<!--- THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY. -->");
            gallery.WriteLine("<!--- This page gets generated with tools/deps/generators/ped_models -->");
            gallery.WriteLine("# Ped Models");

            gallery.WriteLine();
            gallery.WriteLine("## Gallery");
            gallery.WriteLine();

            gallery.WriteLine("<div class=\"grid-container\">");

            foreach (var ped in sortedPedsByName)
            {
                if ("mp_headtargets".Equals(ped.Name.ToLower()) || ped.Name.ToLower().StartsWith("slod_"))
                {
                    continue;
                }

                gallery.WriteLine("  <div class=\"grid-item\">");

                var pedPath = imagePath + ped.Name.ToLower();

                gallery.WriteLine($"    <div class=\"grid-item-img\">");
                gallery.WriteLine($"      <img src=\"{pedPath}.png\" alt=\"Missing image &quot;{ped.Name}.png&quot;\" title=\"{ped.Name}\" loading=\"lazy\" />");
                gallery.WriteLine($"    </div>");

                if (ped.DlcName.ToLower() == "titleupdate")
                {
                    gallery.WriteLine("    <b>Name:</b> " + ped.Name + "<br/>");
                    gallery.WriteLine("    <b>Hash:</b> " + ped.HexHash + "<br/>");
                    gallery.WriteLine("    <b>Type:</b> " + ped.Pedtype.ToUpper());
                }
                else
                {
                    gallery.WriteLine("    <b>Name:</b> " + ped.Name + "<br/>");
                    gallery.WriteLine("    <b>Hash:</b> " + ped.HexHash + "<br/>");
                    gallery.WriteLine("    <b>Type:</b> " + ped.Pedtype.ToUpper() + "<br/>");
                    gallery.WriteLine("    <b>DLC:</b> " + ped.DlcName.ToLower());
                }

                gallery.WriteLine("  </div>");
            }

            gallery.WriteLine("</div>");

            /*
             * Generate Snippets
             */
            gallery.WriteLine();
            gallery.WriteLine("## Snippets");
            gallery.WriteLine();

            gallery.WriteLine("# [JavaScript](#tab/tab1-0)");
            gallery.WriteLine("```js");
            gallery.WriteLine("export class PedModel {");

            foreach (var ped in sortedPedsByName)
            {
                gallery.WriteLine($"  static {ped.Name.ToLower()} = {ped.HexHash};");
            }

            gallery.WriteLine("}");
            gallery.WriteLine("```");
            gallery.WriteLine("# [TypeScript](#tab/tab1-1)");
            gallery.WriteLine("```ts");
            gallery.WriteLine("export enum PedModel {");

            foreach (var ped in sortedPedsByName)
            {
                gallery.WriteLine($"  {ped.Name.ToLower()} = {ped.HexHash},");
            }

            gallery.WriteLine("}");
            gallery.WriteLine("```");
            gallery.WriteLine("***");

            gallery.WriteLine();

            gallery.WriteLine("**Created with [GTA V Data Dumps from DurtyFree](https://github.com/DurtyFree/gta-v-data-dumps)**");

            gallery.Close();
            Console.WriteLine($"{pedModelsFile} created for {peds.Count} peds.");

            Console.WriteLine("This tool is using data files from https://github.com/DurtyFree/gta-v-data-dumps");
        }
    }
}
